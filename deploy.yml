---
- name: Deploy Dockerized Website
  hosts: web
  become: true
  vars:
    docker_user: "{{ lookup('env', 'DOCKER_USER') }}"  # Docker username from environment variables
    docker_pass: "{{ lookup('env', 'DOCKER_PASS') }}"  # Docker password from environment variables
    image_name: "website"
    commit_hash: "{{ git_hash }}"  # Git commit hash passed from Jenkins

  tasks:
    - name: Install prerequisite packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      register: add_gpg_key
      changed_when: "'OK' in add_gpg_key.stdout"

    - name: Add Docker repository
      shell: |
        add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      register: add_repo
      changed_when: "'added' in add_repo.stdout or 'already exists' in add_repo.stdout"

    - name: Update package list
      apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: true

    - name: Log in to Docker Hub
      docker_login:
        username: "{{ docker_user }}"
        password: "{{ docker_pass }}"
      register: login_status
      failed_when: login_status.failed

    - name: Pull the Docker image
      docker_image:
        name: "{{ docker_user }}/{{ image_name }}"
        tag: "{{ commit_hash }}"
        source: pull

    - name: Stop and remove any existing container
      docker_container:
        name: website
        state: absent
        force_kill: yes  # Ensures container is forcefully stopped

    - name: Run the Docker container
      docker_container:
        name: website
        image: "{{ docker_user }}/{{ image_name }}:{{ commit_hash }}"
        state: started
        ports:
          - "80:80"
        restart_policy: always
